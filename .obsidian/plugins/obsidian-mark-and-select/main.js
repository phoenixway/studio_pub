/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// main.ts
__export(exports, {
  default: () => MarkAndSelectPlugin
});
var import_obsidian = __toModule(require("obsidian"));
var MarkAndSelectPlugin = class extends import_obsidian.Plugin {
  onload() {
    return __async(this, null, function* () {
      this.addCommand({
        id: "set-mark",
        name: "Set mark",
        icon: "pencil",
        hotkeys: [{ modifiers: ["Ctrl", "Shift"], key: "2" }],
        editorCallback: (editor, view) => {
          console.log(editor.getCursor());
          this.one_end_position = editor.getCursor();
        }
      });
      this.addCommand({
        id: "select-from-mark",
        name: "Select from mark",
        icon: "up-and-down-arrows",
        hotkeys: [{ modifiers: ["Ctrl", "Shift"], key: "3" }],
        editorCallback: (editor, view) => {
          if (this.one_end_position != null) {
            editor.setSelection(this.one_end_position, editor.getCursor());
          }
        }
      });
    });
  }
  onunload() {
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgRWRpdG9yLCBFZGl0b3JQb3NpdGlvbiwgTWFya2Rvd25WaWV3LCBQbHVnaW4gfSBmcm9tICdvYnNpZGlhbic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYXJrQW5kU2VsZWN0UGx1Z2luIGV4dGVuZHMgUGx1Z2luIHtcclxuXHRvbmVfZW5kX3Bvc2l0aW9uOiBFZGl0b3JQb3NpdGlvbjtcclxuXHJcblx0YXN5bmMgb25sb2FkKCkge1xyXG5cdFx0dGhpcy5hZGRDb21tYW5kKHtcclxuXHRcdFx0aWQ6ICdzZXQtbWFyaycsXHJcblx0XHRcdG5hbWU6ICdTZXQgbWFyaycsXHJcblx0XHRcdGljb246ICdwZW5jaWwnLFxyXG5cdFx0XHRob3RrZXlzOiBbe21vZGlmaWVyczogWydDdHJsJywgJ1NoaWZ0J10sIGtleTogJzInfV0sXHJcblx0XHRcdGVkaXRvckNhbGxiYWNrOiAoZWRpdG9yOiBFZGl0b3IsIHZpZXc6IE1hcmtkb3duVmlldykgPT4ge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVkaXRvci5nZXRDdXJzb3IoKSk7XHJcblx0XHRcdFx0dGhpcy5vbmVfZW5kX3Bvc2l0aW9uPSBlZGl0b3IuZ2V0Q3Vyc29yKCk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0dGhpcy5hZGRDb21tYW5kKHtcclxuXHRcdFx0aWQ6ICdzZWxlY3QtZnJvbS1tYXJrJyxcclxuXHRcdFx0bmFtZTogJ1NlbGVjdCBmcm9tIG1hcmsnLFxyXG5cdFx0XHRpY29uOiAndXAtYW5kLWRvd24tYXJyb3dzJyxcclxuXHRcdFx0aG90a2V5czogW3ttb2RpZmllcnM6IFsnQ3RybCcsICdTaGlmdCddLCBrZXk6ICczJ31dLFxyXG5cdFx0XHRlZGl0b3JDYWxsYmFjazogKGVkaXRvcjogRWRpdG9yLCB2aWV3OiBNYXJrZG93blZpZXcpID0+IHtcclxuXHRcdFx0XHRpZih0aGlzLm9uZV9lbmRfcG9zaXRpb24gIT0gbnVsbClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRlZGl0b3Iuc2V0U2VsZWN0aW9uKHRoaXMub25lX2VuZF9wb3NpdGlvbiwgZWRpdG9yLmdldEN1cnNvcigpKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0b251bmxvYWQoKSB7XHJcblxyXG5cdH1cclxuXHJcbn1cclxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFBNkQ7QUFFN0Qsd0NBQWlELHVCQUFPO0FBQUEsRUFHakQsU0FBUztBQUFBO0FBQ2QsV0FBSyxXQUFXO0FBQUEsUUFDZixJQUFJO0FBQUEsUUFDSixNQUFNO0FBQUEsUUFDTixNQUFNO0FBQUEsUUFDTixTQUFTLENBQUMsRUFBQyxXQUFXLENBQUMsUUFBUSxVQUFVLEtBQUs7QUFBQSxRQUM5QyxnQkFBZ0IsQ0FBQyxRQUFnQixTQUF1QjtBQUN2RCxrQkFBUSxJQUFJLE9BQU87QUFDbkIsZUFBSyxtQkFBa0IsT0FBTztBQUFBO0FBQUE7QUFHaEMsV0FBSyxXQUFXO0FBQUEsUUFDZixJQUFJO0FBQUEsUUFDSixNQUFNO0FBQUEsUUFDTixNQUFNO0FBQUEsUUFDTixTQUFTLENBQUMsRUFBQyxXQUFXLENBQUMsUUFBUSxVQUFVLEtBQUs7QUFBQSxRQUM5QyxnQkFBZ0IsQ0FBQyxRQUFnQixTQUF1QjtBQUN2RCxjQUFHLEtBQUssb0JBQW9CLE1BQzVCO0FBQ0MsbUJBQU8sYUFBYSxLQUFLLGtCQUFrQixPQUFPO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTXRELFdBQVc7QUFBQTtBQUFBOyIsCiAgIm5hbWVzIjogW10KfQo=
